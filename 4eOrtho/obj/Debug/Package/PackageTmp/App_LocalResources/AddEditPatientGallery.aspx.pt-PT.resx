<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AjaxFileUpload1Resource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="btnBackResource1.Text" xml:space="preserve">
    <value>Voltar</value>
  </data>
  <data name="btnBackResource1.ToolTip" xml:space="preserve">
    <value>Voltar</value>
  </data>
  <data name="btnResetResource1.Text" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="btnResetResource1.ToolTip" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="btnSubmitResource1.Text" xml:space="preserve">
    <value>Enviar</value>
  </data>
  <data name="btnSubmitResource1.ToolTip" xml:space="preserve">
    <value>Enviar</value>
  </data>
  <data name="chkIsActiveResource1.Text" xml:space="preserve">
    <value />
  </data>
  <data name="chkIsActiveResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="ddlPatientResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblHeaderResource1.Text" xml:space="preserve">
    <value>Adicionar Paciente Gallery</value>
  </data>
  <data name="lblHeaderResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblIsActiveResource1.Text" xml:space="preserve">
    <value>Está ativo</value>
  </data>
  <data name="lblIsActiveResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblMsgResource1.Text" xml:space="preserve">
    <value />
  </data>
  <data name="lblMsgResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblPatientResource1.Text" xml:space="preserve">
    <value>Selecionar Paciente</value>
  </data>
  <data name="lblPatientResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblPicturesResource1.Text" xml:space="preserve">
    <value>Seleccione Imagem:</value>
  </data>
  <data name="lblPicturesResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblTreatmentNameResource1.Text" xml:space="preserve">
    <value>Tratamento</value>
  </data>
  <data name="lblTreatmentNameResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="PageResource1.Title" xml:space="preserve">
    <value>4ClearOrtho - Adicionar Paciente Gallery</value>
  </data>
  <data name="rfvPatientResource1.ErrorMessage" xml:space="preserve">
    <value>Por favor, selecione Nome do Paciente</value>
  </data>
  <data name="rfvPatientResource1.Text" xml:space="preserve">
    <value />
  </data>
  <data name="rfvPatientResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="rqvTreatmentResource1.ErrorMessage" xml:space="preserve">
    <value>Por favor, indique Tratamento</value>
  </data>
  <data name="rqvTreatmentResource1.Text" xml:space="preserve">
    <value />
  </data>
  <data name="rqvTreatmentResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="txtTreatmentResource1.Text" xml:space="preserve">
    <value />
  </data>
  <data name="txtTreatmentResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="PageResource2" xml:space="preserve">
    <value>4ClearOrtho - Edite Paciente Gallery</value>
  </data>
  <data name="lblHeaderResource2" xml:space="preserve">
    <value>Edite Paciente Gallery</value>
  </data>
  <data name="DeleteMessage" xml:space="preserve">
    <value>Tem certeza de que deseja excluir?</value>
  </data>
  <data name="Dropfileshere" xml:space="preserve">
    <value>Soltar arquivos aqui</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remover</value>
  </data>
  <data name="SelectFile" xml:space="preserve">
    <value>Selecione o arquivo</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Envio</value>
  </data>
  <data name="AfterPicture" xml:space="preserve">
    <value>Depois de Imagem</value>
  </data>
  <data name="BeforePicture" xml:space="preserve">
    <value>Antes de Imagem</value>
  </data>
  <data name="DropSelect" xml:space="preserve">
    <value>Gota / Select</value>
  </data>
  <data name="filesize" xml:space="preserve">
    <value>O tamanho do arquivo não pode ter mais do que 2MB!</value>
  </data>
  <data name="selectboth" xml:space="preserve">
    <value>Por favor, selecione antes e depois de imagens.</value>
  </data>
  <data name="validimage" xml:space="preserve">
    <value>não é um arquivo de imagem válido.</value>
  </data>
  <data name="AfterTemplateResource1.Text" xml:space="preserve">
    <value>Depois de Template</value>
  </data>
  <data name="AfterTreatmentResource1.Text" xml:space="preserve">
    <value>Pós tratamento</value>
  </data>
  <data name="Anterior" xml:space="preserve">
    <value>Anterior</value>
  </data>
  <data name="BeforeTemplateResource1.Text" xml:space="preserve">
    <value>Antes de Template</value>
  </data>
  <data name="BeforeTreatmentResource1.Text" xml:space="preserve">
    <value>Antes do tratamento</value>
  </data>
  <data name="buttonContent" xml:space="preserve">
    <value>Queda / Selecionar Imagem</value>
  </data>
  <data name="CreatedDateResource1.Text" xml:space="preserve">
    <value>Data criada:</value>
  </data>
  <data name="FullFace" xml:space="preserve">
    <value>Full Face</value>
  </data>
  <data name="LeftLateral" xml:space="preserve">
    <value>Lateral Esquerdo</value>
  </data>
  <data name="Mandibulary" xml:space="preserve">
    <value>Mandibular</value>
  </data>
  <data name="Maxillary" xml:space="preserve">
    <value>Maxilar</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="PatientResource1.Text" xml:space="preserve">
    <value>Paciente:</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Anterior</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Perfil</value>
  </data>
  <data name="RightLateral" xml:space="preserve">
    <value>Lateral Direito</value>
  </data>
  <data name="Smile" xml:space="preserve">
    <value>Sorrir</value>
  </data>
  <data name="AfterErrorMessage" xml:space="preserve">
    <value>Por favor, fazer upload de tudo depois de imagens de modelo.</value>
  </data>
  <data name="BeforeErrorMessage" xml:space="preserve">
    <value>Por favor envie todas as imagens antes de modelo.</value>
  </data>
  <data name="Pleaseuploadallimages" xml:space="preserve">
    <value>Faça upload de todas as imagens.</value>
  </data>
</root>